name: Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  release:
    name: Create Release Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: linux
          - os: windows-latest
            platform: windows
            artifact_name: windows
          - os: macos-latest
            platform: macos
            artifact_name: macos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate assets
        run: pnpm run generate:assets

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libxss1 libgtk-3-dev libxrandr2 libasound2-dev rpm fakeroot

      - name: Build release application
        run: pnpm run make
        env:
          CI: true

      - name: Prepare artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p release-artifacts
          find out/make -name "*.deb" -exec cp {} release-artifacts/ \;
          find out/make -name "*.rpm" -exec cp {} release-artifacts/ \;
          ls -la release-artifacts/

      - name: Prepare artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          New-Item -ItemType Directory -Force -Path release-artifacts
          Get-ChildItem -Path out/make -Recurse -Include "*.exe", "*.zip" | Copy-Item -Destination release-artifacts/
          Get-ChildItem release-artifacts/

      - name: Prepare artifacts (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p release-artifacts
          find out/make -name "*.dmg" -exec cp {} release-artifacts/ \;
          find out/make -name "*.zip" -exec cp {} release-artifacts/ \;
          ls -la release-artifacts/

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: manic-miners-launcher-${{ matrix.artifact_name }}-release
          path: release-artifacts/
          retention-days: 90

      - name: Upload to GitHub Release (if release exists)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts/*
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
