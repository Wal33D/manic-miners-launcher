name: CI/CD Pipeline

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm run lint || echo "Linting completed with warnings"

      - name: Run TypeScript compilation check
        run: npx tsc --noEmit

      - name: Generate assets
        run: pnpm run generate:assets

      - name: Run tests
        run: pnpm run test

      - name: Test Electron packaging (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libxss1 libgtk-3-dev libxrandr2 libasound2-dev rpm fakeroot
          pnpm run package
        env:
          CI: true

      - name: Test Electron packaging (Windows)
        if: matrix.os == 'windows-latest'
        run: pnpm run package
        env:
          CI: true

      - name: Test Electron packaging (macOS)
        if: matrix.os == 'macos-latest'
        run: pnpm run package
        env:
          CI: true

  build:
    name: Build distributables on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate assets
        run: pnpm run generate:assets

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libxss1 libgtk-3-dev libxrandr2 libasound2-dev rpm fakeroot

      - name: Build application
        run: pnpm run make
        env:
          CI: true

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: manic-miners-launcher-linux
          path: |
            out/make/**/*.deb
            out/make/**/*.rpm
          retention-days: 30

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: manic-miners-launcher-windows
          path: |
            out/make/**/*.exe
            out/make/**/*.zip
          retention-days: 30

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: manic-miners-launcher-macos
          path: |
            out/make/**/*.dmg
            out/make/**/*.zip
          retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for outdated dependencies
        run: pnpm outdated || true

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate assets
        run: pnpm run generate:assets

      - name: Package application
        run: pnpm run package
        env:
          CI: true

      - name: Check package size
        run: |
          echo "Checking application bundle size..."
          du -sh out/manic-miners-launcher-* || echo "Package directory not found"
          ls -la out/ || echo "Out directory not found"

      - name: Bundle analysis
        run: |
          echo "Analyzing bundle contents..."
          find out/ -name "*.js" -exec wc -l {} + | sort -nr | head -10 || echo "No JS files found"
